{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "InstanceType": {
      "Description": "Server instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t2.micro",
        "t2.small"
      ],
      "ConstraintDescription": "Must be a valid EC2 type."
    },
    "KeyPair": {
      "Description": "Server key-pair name for EC2 Instances.",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "YourIp": {
      "Description": "Your public IP address (x.x.x.x/32)",
      "Type": "String",
      "ConstraintDescription": "Must be a valid IP address in CIDR notation (x.x.x.x/32)"
    }
  },
  "Resources": {
    "EngineeringVpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "CidrBlock": "10.0.0.0/18",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "CorpWeb"
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {}
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "EngineeringVpc"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "EngineeringVpc"
        }
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      },
      "DependsOn": [
        "InternetGateway"
      ]
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "EngineeringVpc"
        },
        "MapPublicIpOnLaunch": "true",
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PublicSubnet1"
          }
        ]
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "EngineeringVpc"
        },
        "MapPublicIpOnLaunch": "true",
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PublicSubnet2"
          }
        ]
      }
    },
    "PublicSubnet1RTassoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet1"
        }
      }
    },
    "PublicSubnet2RTassoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet2"
        }
      }
    },
    "web1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "ImageId": "ami-01cc34ab2709337aa",
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "KeyName": {
          "Ref": "KeyPair"
        },
        "IamInstanceProfile": {
          "Ref": "EC2InstanceProfile"
        },
        "SecurityGroupIds": [
          {
            "Ref": "WebserversSG"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "web1"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": "#!/bin/bash\nyum update -y\nyum install -y git httpd php\nservice httpd start\nchkconfig httpd on\naws s3 cp s3://seis665-public/index.php /var/www/html/\n"
          }
        }
      }
    },
    "web2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "ImageId": "ami-01cc34ab2709337aa",
        "SubnetId": {
          "Ref": "PublicSubnet2"
        },
        "KeyName": {
          "Ref": "KeyPair"
        },
        "IamInstanceProfile": {
          "Ref": "EC2InstanceProfile"
        },
        "SecurityGroupIds": [
          {
            "Ref": "WebserversSG"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "web2"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": "#!/bin/bash\nyum update -y\nyum install -y git httpd php\nservice httpd start\nchkconfig httpd on\naws s3 cp s3://seis665-public/index.php /var/www/html/\n"
          }
        }
      }
    },
    "WebserversSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "EngineeringVpc"
        },
        "GroupDescription": "Security group rules for webserver host.",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "YourIp"
            }
          }
        ]
      }
    },
    "EngineeringLB": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Name": "EngineeringLB",
        "Scheme": "internet-facing",
        "Subnets": [
          {
            "Ref": "PublicSubnet1"
          },
          {
            "Ref": "PublicSubnet2"
          }
        ],
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "WebserversSG",
              "GroupId"
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "EngineeringLB"
          }
        ]
      }
    },
    "EngineeringWebserversTargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Name": "EngineeringWebservers",
        "Port": 80,
        "Protocol": "HTTP",
        "VpcId": {
          "Ref": "EngineeringVpc"
        },
        "HealthCheckProtocol": "HTTP",
        "HealthCheckPort": "80",
        "HealthCheckPath": "/",
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 2,
        "UnhealthyThresholdCount": 2,
        "TargetType": "instance",
        "Targets": [
          {
            "Id": {
              "Ref": "web1"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "web2"
            },
            "Port": 80
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "EngineeringWebserversTargetGroup"
          }
        ]
      }
    },
    "EngineeringLBListener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "EngineeringWebserversTargetGroup"
            }
          }
        ],
        "LoadBalancerArn": {
          "Ref": "EngineeringLB"
        },
        "Port": 80,
        "Protocol": "HTTP"
      }
    },
    "EC2S3Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonS3FullAccess"
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "EC2S3Role"
          }
        ]
      }
    },
    "EC2InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "EC2S3Role"
          }
        ]
      }
    }
  },
  "Outputs": {
    "WebUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "EngineeringLB",
                "DNSName"
              ]
            }
          ]
        ]
      },
      "Description": "Load Balancer URL"
    }
  }
}